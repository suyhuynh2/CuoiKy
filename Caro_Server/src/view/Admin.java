/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import dao.UserDAO;

import javax.swing.JOptionPane;

import model.User;
import controller.Room;
import controller.Server;
import controller.ServerThread;

/**
 * @author Admin
 */
public class Admin extends javax.swing.JFrame implements Runnable {
    private final UserDAO userDAO;

    /**
     * Creates new form Admin
     */
    public Admin() {
        initComponents();
        this.setResizable(false);
        this.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        this.setLocationRelativeTo(null);
        jTextArea_ThreadRoomListView.setEditable(false);
        jTextArea_MessageView.setEditable(false);
        userDAO = new UserDAO();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField2 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea_ThreadRoomListView = new javax.swing.JTextArea();
        jButton_ViewThread_ = new javax.swing.JButton();
        jButton_ViewRoomList_ = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        boardLabel = new javax.swing.JLabel();
        jTextField_Notice = new javax.swing.JTextField();
        jButton_PublishMessage_ = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea_MessageView = new javax.swing.JTextArea();
        jTextField_UserID = new javax.swing.JTextField();
        jButton_Ban_ = new javax.swing.JButton();
        jButton_Warn_ = new javax.swing.JButton();
        jButton_CancelBan_ = new javax.swing.JButton();
        jComboBox_Reason = new javax.swing.JComboBox<>();

        jTextField2.setText("jTextField2");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTextArea_ThreadRoomListView.setColumns(20);
        jTextArea_ThreadRoomListView.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTextArea_ThreadRoomListView.setRows(5);
        jScrollPane1.setViewportView(jTextArea_ThreadRoomListView);

        jButton_ViewThread_.setText("Xem danh sách luồng");
        jButton_ViewThread_.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_ViewThread_ActionPerformed(evt);
            }
        });

        jButton_ViewRoomList_.setText("Xem danh sách phòng");
        jButton_ViewRoomList_.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_ViewRoomList_ActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 204));

        boardLabel.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        boardLabel.setForeground(new java.awt.Color(0, 0, 0));
        boardLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        boardLabel.setText("Admin");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(boardLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(boardLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 48, Short.MAX_VALUE)
        );

        jTextField_Notice.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jTextField_Notice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField_NoticeKeyPressed(evt);
            }
        });

        jButton_PublishMessage_.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jButton_PublishMessage_.setText("Phát thông báo");
        jButton_PublishMessage_.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_PublishMessage_ActionPerformed(evt);
            }
        });

        jTextArea_MessageView.setColumns(20);
        jTextArea_MessageView.setRows(5);
        jScrollPane2.setViewportView(jTextArea_MessageView);

        jButton_Ban_.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jButton_Ban_.setText("Ban");
        jButton_Ban_.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_Ban_ActionPerformed(evt);
            }
        });

        jButton_Warn_.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jButton_Warn_.setText("Cảnh cáo");
        jButton_Warn_.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_Warn_ActionPerformed(evt);
            }
        });

        jButton_CancelBan_.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jButton_CancelBan_.setText("Huỷ Ban");
        jButton_CancelBan_.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_CancelBan_ActionPerformed(evt);
            }
        });

        jComboBox_Reason.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jComboBox_Reason.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Chọn lý do", "Ngôn ngữ thô tục - xúc phạm người khác", "Spam đăng nhập", "Sử dụng game với mục đích xấu", "Phát hiện rò rỉ bảo mật - tài khoản tạm thời bị khoá để kiểm tra thêm" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 474, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jButton_ViewRoomList_, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton_ViewThread_, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jTextField_UserID, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jComboBox_Reason, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jTextField_Notice)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton_PublishMessage_, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 474, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton_CancelBan_, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                            .addComponent(jButton_Ban_, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton_Warn_, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(31, 31, 31))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addComponent(jButton_ViewThread_)
                        .addGap(18, 18, 18)
                        .addComponent(jButton_ViewRoomList_)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton_Ban_, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(jButton_CancelBan_)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton_Warn_))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField_Notice, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton_PublishMessage_))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField_UserID, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox_Reason, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(11, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    //Hiển thị danh sách luồng
    private void jButton_ViewThread_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_ViewThread_ActionPerformed
        // Quản lí chuỗi String
        StringBuilder res = new StringBuilder(); 
        String room;
        int i = 1;
        // Duyệt qua danh sách các ServerThread
        for (ServerThread serverThread : Server.serverThreadBus.getListServerThreads()) {
            // Kiểm tra có room không
            if (serverThread.getRoom() == null) 
                room = null;
            else room = "" + serverThread.getRoom().getId();
            // Kiểm tra có user không
            if (serverThread.getUser() != null) {
                res.append(i).append(". Client-number: ").append(serverThread.getClientNumber()).append(", User-ID: ").append(serverThread.getUser().getID()).append(", Room: ").append(room).append("\n");
            } else {
                res.append(i).append(". Client-number: ").append(serverThread.getClientNumber()).append(", User-ID: null, Room: ").append(room).append("\n");
            }
            i++;
        }
        jTextArea_ThreadRoomListView.setText(res.toString());
    }//GEN-LAST:event_jButton_ViewThread_ActionPerformed
    
    //Hiển thị danh sách phòng
    private void jButton_ViewRoomList_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_ViewRoomList_ActionPerformed
        StringBuilder res = new StringBuilder();
        int i = 1;
        for (ServerThread serverThread : Server.serverThreadBus.getListServerThreads()) {
            Room room = serverThread.getRoom();
            String listUser = "List user ID: ";
            if (room != null) {
                if (room.getNumberOfUser() == 1) {
                    listUser += room.getUser1().getUser().getID();
                } else {
                    listUser += room.getUser1().getUser().getID() + ", " + room.getUser2().getUser().getID();
                }
                res.append(i).append(". Room_ID: ").append(room.getId()).append(", Number of player: ").append(room.getNumberOfUser()).append(", ").append(listUser).append("\n");
                i++;
            }

        }
        jTextArea_ThreadRoomListView.setText(res.toString());
    }//GEN-LAST:event_jButton_ViewRoomList_ActionPerformed

    private void jButton_PublishMessage_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_PublishMessage_ActionPerformed
        sendMessage();
    }//GEN-LAST:event_jButton_PublishMessage_ActionPerformed

    private void jTextField_NoticeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_NoticeKeyPressed
        if (evt.getKeyCode() == 10) {
            sendMessage();
        }
    }//GEN-LAST:event_jTextField_NoticeKeyPressed

    private void jButton_Ban_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_Ban_ActionPerformed
        try {
            if (isInvalidForm()) return;
            int userId = Integer.parseInt(jTextField_UserID.getText());
            User user = new User();
            user.setID(userId);
            userDAO.updateBannedStatus(user, true);
            ServerThread serverThread = Server.serverThreadBus.getServerThreadByUserID(userId);
            serverThread.write("banned-notice," + jComboBox_Reason.getSelectedItem());
            if (serverThread.getRoom() != null) {
                Room room = serverThread.getRoom();
                ServerThread competitorThread = room.getCompetitor(serverThread.getClientNumber());
                room.setUsersToNotPlaying();
                if (competitorThread != null) {
                    room.decreaseNumberOfGame();
                    competitorThread.write("left-room,");
                    competitorThread.setRoom(null);
                }
                serverThread.setRoom(null);
            }
            Server.admin.addMessage("User có ID " + userId + " đã bị BAN");
            serverThread.setUser(null);
            Server.serverThreadBus.boardCast(-1, "chat-server," + "User có ID " + userId + " đã bị BAN");
            JOptionPane.showMessageDialog(rootPane, "Đã BAN user " + userId);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, "Có lỗi xảy ra");
        }
    }//GEN-LAST:event_jButton_Ban_ActionPerformed

    private void jButton_CancelBan_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_CancelBan_ActionPerformed
        try {
            if (jTextField_UserID.getText().isEmpty()) {
                JOptionPane.showMessageDialog(rootPane, "Vui lòng nhập ID của User");
                return;
            }
            int userId = Integer.parseInt(jTextField_UserID.getText());
            User user = new User();
            user.setID(userId);
            userDAO.updateBannedStatus(user, false);
            jTextField_UserID.setText("");
            JOptionPane.showMessageDialog(rootPane, "Đã huỷ BAN user " + userId);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, "Có lỗi xảy ra");
        }
    }//GEN-LAST:event_jButton_CancelBan_ActionPerformed

    private void jButton_Warn_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_Warn_ActionPerformed
        try {
            if (isInvalidForm()) return;
            int userId = Integer.parseInt(jTextField_UserID.getText());
            Server.serverThreadBus.sendMessageToUserID(userId, "warning-notice," + jComboBox_Reason.getSelectedItem());
            JOptionPane.showMessageDialog(rootPane, "Đã cảnh cáo user " + userId);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, "Có lỗi xảy ra");
        }
    }//GEN-LAST:event_jButton_Warn_ActionPerformed

    private void sendMessage() {
        String message = jTextField_Notice.getText();
        if (message.isEmpty()) return;
        String temp = jTextArea_MessageView.getText();
        temp += "Thông báo từ máy chủ : " + message + "\n";
        jTextArea_MessageView.setText(temp);
        jTextArea_MessageView.setCaretPosition(jTextArea_MessageView.getDocument().getLength());
        Server.serverThreadBus.boardCast(-1, "chat-server,Thông báo từ máy chủ : " + message);
        jTextField_Notice.setText("");
    }

    public void addMessage(String message) {
        String tmp = jTextArea_MessageView.getText();
        tmp = tmp + message + "\n";
        jTextArea_MessageView.setText(tmp);
        jTextArea_MessageView.setCaretPosition(jTextArea_ThreadRoomListView.getDocument().getLength());
    }

    private boolean isInvalidForm() {
        if (jTextField_UserID.getText().isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Vui lòng nhập ID của User");
            return true;
        }
        if (jComboBox_Reason.getSelectedIndex() < 1) {
            JOptionPane.showMessageDialog(rootPane, "Vui lòng chọn lý do");
            return true;
        }
        return false;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel boardLabel;
    private javax.swing.JButton jButton_Ban_;
    private javax.swing.JButton jButton_CancelBan_;
    private javax.swing.JButton jButton_PublishMessage_;
    private javax.swing.JButton jButton_ViewRoomList_;
    private javax.swing.JButton jButton_ViewThread_;
    private javax.swing.JButton jButton_Warn_;
    private javax.swing.JComboBox<String> jComboBox_Reason;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    public static javax.swing.JTextArea jTextArea_MessageView;
    private javax.swing.JTextArea jTextArea_ThreadRoomListView;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField_Notice;
    private javax.swing.JTextField jTextField_UserID;
    // End of variables declaration//GEN-END:variables

    @Override
    public void run() {
        new Admin().setVisible(true);
    }
}
